
# ESCALAFIN MVP - DOCKERFILE SIMPLIFICADO Y ROBUSTO
# Versión: 11.0 - Solo NPM para mayor estabilidad
# Fecha: 2025-10-16

FROM node:18-alpine AS base

# Instalar dependencias del sistema
RUN apk add --no-cache libc6-compat curl openssl dumb-init && \
    rm -rf /var/cache/apk/*

ENV NEXT_TELEMETRY_DISABLED=1 \
    NODE_ENV=production

WORKDIR /app

# ===== STAGE 1: Dependencias =====
FROM base AS deps

COPY app/package*.json ./

# Instalar con npm (más estable en Docker)
RUN npm cache clean --force && \
    npm install --legacy-peer-deps --no-audit --prefer-offline

# ===== STAGE 2: Build =====
FROM base AS builder

WORKDIR /app

# Copiar node_modules
COPY --from=deps /app/node_modules ./node_modules

# Copiar código fuente
COPY app/ ./

# Variables de entorno para build
ENV DATABASE_URL="postgresql://user:pass@localhost:5432/db" \
    NEXTAUTH_URL="http://localhost:3000" \
    NEXTAUTH_SECRET="placeholder-secret-for-build-min-32-chars" \
    AWS_BUCKET_NAME="placeholder" \
    AWS_FOLDER_PREFIX="placeholder/" \
    AWS_REGION="us-east-1" \
    OPENPAY_MERCHANT_ID="placeholder" \
    OPENPAY_PRIVATE_KEY="placeholder" \
    OPENPAY_PUBLIC_KEY="placeholder" \
    OPENPAY_BASE_URL="https://sandbox-api.openpay.mx/v1" \
    EVOLUTION_API_URL="http://localhost:8080" \
    EVOLUTION_API_TOKEN="placeholder" \
    EVOLUTION_INSTANCE_NAME="placeholder" \
    SKIP_ENV_VALIDATION=true

# Generar Prisma Client
RUN npx prisma generate

# Forzar standalone output
RUN sed -i "s/output: process.env.NEXT_OUTPUT_MODE,/output: 'standalone',/" next.config.js || true

# Build Next.js
RUN npm run build

# Verificar standalone
RUN test -d .next/standalone || (echo "ERROR: standalone no generado" && exit 1)

# ===== STAGE 3: Production =====
FROM base AS runner

WORKDIR /app

ENV PORT=3000

# Usuario no-root
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copiar archivos necesarios
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/prisma ./prisma
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/@prisma ./node_modules/@prisma

# Directorio uploads
RUN mkdir -p /app/uploads && chown -R nextjs:nodejs /app/uploads

USER nextjs

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "server.js"]
