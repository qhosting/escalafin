
# ESCALAFIN MVP - DOCKERFILE OPTIMIZADO PARA COOLIFY
# Versión: 11.0 - Solo NPM (más estable en Docker)
# Fecha: 2025-10-16

FROM node:18-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat \
    curl \
    dumb-init \
    openssl \
    && rm -rf /var/cache/apk/*

# Create app directory and user
WORKDIR /app
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# ===== STAGE 1: Instalar dependencias =====
FROM base AS deps
WORKDIR /app

# Copy package files (package.json y ambos lock files por compatibilidad)
COPY app/package.json app/package-lock.json* app/yarn.lock* ./

# Instalar dependencias SOLO con NPM
RUN echo "=== Instalando dependencias con NPM ===" && \
    echo "Limpiando cache..." && \
    npm cache clean --force && \
    echo "Instalando todas las dependencias (dev + prod)..." && \
    npm install --legacy-peer-deps --prefer-offline --no-audit --progress=false && \
    echo "✅ Dependencias instaladas correctamente"

# ===== STAGE 2: Build =====
FROM base AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy source code
COPY app/ .

# Variables de entorno para el build
ENV SKIP_ENV_VALIDATION=true

# Generate Prisma client
RUN echo "=== Generando Prisma Client ===" && \
    npx prisma generate && \
    echo "✅ Prisma Client generado"

# Build Next.js application con NPM
RUN echo "=== Building Next.js ===" && \
    npm run build && \
    echo "✅ Build completado"

# Production image
FROM base AS runner
WORKDIR /app

# Copy built application
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nextjs:nodejs /app/prisma ./prisma

# Create necessary directories
RUN mkdir -p /app/uploads && chown nextjs:nodejs /app/uploads

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Start the application
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "server.js"]
