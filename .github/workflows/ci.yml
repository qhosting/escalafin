
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: escalafin_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Enable Corepack
      run: corepack enable

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: cd app && echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('app/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: cd app && yarn install --frozen-lockfile
    
    - name: Setup test environment
      run: |
        cd app
        cp .env.example .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/escalafin_test" >> .env
        echo "NEXTAUTH_SECRET=test-secret-key" >> .env
        echo "NEXTAUTH_URL=http://localhost:3000" >> .env
    
    - name: Generate Prisma Client
      run: cd app && npm run prisma generate
    
    - name: Run database migrations
      run: cd app && npm run prisma db push
    
    - name: Type check
      run: cd app && yarn tsc --noEmit
    
    - name: Build application
      run: cd app && yarn build
    
    - name: Run tests
      run: cd app && yarn test --passWithNoTests
