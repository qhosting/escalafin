
version: '3.8'

services:
  app_demo:
    build:
      context: .
      dockerfile: Dockerfile.coolify
    container_name: escalafin_app_demo
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://escalafin_demo:HviywCjG4qO9DGhtpxRjEw@db_demo:5432/escalafin_demo
      - NEXTAUTH_URL=https://demo.escalafin.com
      - NEXTAUTH_SECRET=iHGhXsz+tzFKWWCTfeTV2nZSDzSeN153urgLOGQYdFU=
      - AWS_BUCKET_NAME=demo-files
      - AWS_FOLDER_PREFIX=demo/
      - EVOLUTION_INSTANCE_NAME=demo
      - OPENPAY_MERCHANT_ID=${OPENPAY_MERCHANT_ID}
      - OPENPAY_PRIVATE_KEY=${OPENPAY_PRIVATE_KEY}
      - OPENPAY_PUBLIC_KEY=${OPENPAY_PUBLIC_KEY}
      - OPENPAY_BASE_URL=https://api.openpay.mx/v1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - EVOLUTION_API_URL=${EVOLUTION_API_URL}
      - EVOLUTION_API_TOKEN=${EVOLUTION_API_TOKEN}
    depends_on:
      db_demo:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "coolify.managed=true"
      - "coolify.name=escalafin-demo"
      - "coolify.domain=demo.escalafin.com"

  db_demo:
    image: postgres:14-alpine
    container_name: escalafin_db_demo
    environment:
      POSTGRES_USER: escalafin_demo
      POSTGRES_PASSWORD: HviywCjG4qO9DGhtpxRjEw
      POSTGRES_DB: escalafin_demo
    volumes:
      - postgres_data_demo:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U escalafin_demo"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "coolify.managed=true"

  redis_demo:
    image: redis:7-alpine
    container_name: escalafin_redis_demo
    command: redis-server --requirepass y6b7gmMwDuH1rWwrJ7i9VA
    volumes:
      - redis_data_demo:/data
    restart: unless-stopped
    labels:
      - "coolify.managed=true"

volumes:
  postgres_data_demo:
    labels:
      - "coolify.managed=true"
  redis_data_demo:
    labels:
      - "coolify.managed=true"
