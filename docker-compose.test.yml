
# Docker Compose para pruebas - Ambiente tipo EasyPanel
version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: escalafin_test_db
    environment:
      POSTGRES_USER: escalafin_user
      POSTGRES_PASSWORD: escalafin_pass_2025
      POSTGRES_DB: escalafin_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U escalafin_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - escalafin_network

  redis:
    image: redis:7-alpine
    container_name: escalafin_test_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - escalafin_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: escalafin_test_app
    ports:
      - "3001:3000"
    environment:
      # Node environment
      - NODE_ENV=production
      - PORT=3000
      
      # Database
      - DATABASE_URL=postgresql://escalafin_user:escalafin_pass_2025@postgres:5432/escalafin_db
      
      # NextAuth
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=test-secret-key-min-32-characters-long-escalafin-2025
      
      # JWT
      - JWT_SECRET=jwt-test-secret-key-min-32-characters-long
      
      # AWS S3 (placeholder values)
      - AWS_BUCKET_NAME=escalafin-test-bucket
      - AWS_FOLDER_PREFIX=test/
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      
      # Openpay (valores de prueba)
      - OPENPAY_MERCHANT_ID=test_merchant_id
      - OPENPAY_PRIVATE_KEY=sk_test_example_key
      - OPENPAY_PUBLIC_KEY=pk_test_example_key
      - OPENPAY_BASE_URL=https://sandbox-api.openpay.mx/v1
      
      # Evolution API (placeholder)
      - EVOLUTION_API_URL=http://localhost:8080
      - EVOLUTION_API_TOKEN=test_evolution_token
      - EVOLUTION_INSTANCE_NAME=test_instance
      
      # Redis
      - REDIS_URL=redis://redis:6379
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - escalafin_network
    restart: unless-stopped

volumes:
  postgres_test_data:
  redis_test_data:

networks:
  escalafin_network:
    driver: bridge
