# ESCALAFIN MVP - DOCKERFILE UNIFICADO PARA EASYPANEL
# Versión: 11.0 - Unificado con el Dockerfile principal y start.sh
# Fecha: 2025-10-25

FROM node:18-alpine AS base

# Instalar dependencias del sistema
RUN apk add --no-cache bash libc6-compat curl dumb-init

# Instalar yarn
RUN corepack enable && corepack prepare yarn@4.9.4 --activate

WORKDIR /app

# ===================================
# STAGE 1: Instalar dependencias
# ===================================
FROM base AS deps
WORKDIR /app

COPY app/package.json app/yarn.lock app/.yarnrc.yml ./
RUN yarn install --frozen-lockfile --network-timeout 100000

# ===================================
# STAGE 2: Build de la aplicación
# ===================================
FROM base AS builder
WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY app/ ./

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV SKIP_ENV_VALIDATION=true
ENV NEXT_OUTPUT_MODE=standalone

# Generar Prisma Client
RUN npx prisma generate

# Build Next.js
RUN yarn build

# ===================================
# STAGE 3: Production image
# ===================================
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000

RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copiar build de la aplicación
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

# Copiar dependencias de Prisma
COPY --from=builder --chown=nextjs:nodejs /app/prisma ./prisma
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/@prisma ./node_modules/@prisma
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/prisma ./node_modules/prisma

# Copiar y preparar el script de inicio
COPY --chown=nextjs:nodejs start.sh .
RUN chmod +x ./start.sh

USER nextjs

EXPOSE 3000

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1

CMD ["dumb-init", "sh", "./start.sh"]
